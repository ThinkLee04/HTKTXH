import { motion } from 'framer-motion';
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const AIReportPage = () => {
  const navigate = useNavigate();
  const [activeSection, setActiveSection] = useState('tools');

  const vintagePaperTexture = "url('https://images.rawpixel.com/image_800/cHJpdmF0ZS9sci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTA1L3B4MTA1NzQwNC1pbWFnZS1qb2I2MzAtYV8xLmpwZw.jpg')";

  const sections = [
    { id: 'tools', title: 'C√¥ng c·ª• AI ƒë√£ s·ª≠ d·ª•ng', icon: 'ü§ñ' },
    { id: 'verification', title: 'Ki·ªÉm ch·ª©ng ngu·ªìn', icon: 'üîç' },
    { id: 'creativity', title: '·ª®ng d·ª•ng AI s√°ng t·∫°o', icon: '‚ú®' },
    { id: 'commitment', title: 'Cam k·∫øt li√™m ch√≠nh', icon: 'üìú' }
  ];

  const aiTools = [
    {
      name: 'GitHub Copilot',
      purpose: 'C·∫£i thi·ªán, t·ªëi ∆∞u thi·∫øt k·∫ø v√† animation',
      prompt: 'C·∫£i thi·ªán component React hi·ªán t·∫°i v·ªõi animations m∆∞·ª£t m√† h∆°n, t·ªëi ∆∞u responsive design v√† enhanced user experience cho ·ª©ng d·ª•ng',
      output: 'Suggestions for advanced animations, improved responsive layouts, enhanced visual effects and performance optimizations',
      modifications: '√Åp d·ª•ng selective c√°c ƒë·ªÅ xu·∫•t ph√π h·ª£p, t√πy ch·ªânh animations timing, ƒëi·ªÅu ch·ªânh breakpoints v√† t·ªëi ∆∞u performance'
    },
    {
      name: 'Gemini Gem v√† NotebookLM',
      purpose: 'T·ªïng h·ª£p, t∆∞ v·∫•n n·ªôi dung v√† c·∫•u tr√∫c',
      prompt: 'Ph√¢n t√≠ch v√† t·ªïng h·ª£p c√°c kh√°i ni·ªám kinh t·∫ø Marx-Lenin, ƒë∆∞a ra c·∫•u tr√∫c h·ªçc t·∫≠p logic v√† t·∫°o n·ªôi dung ph√π h·ª£p v·ªõi sinh vi√™n Vi·ªát Nam',
      output: 'Structured content v·ªÅ c√°c h√¨nh th√°i kinh t·∫ø-x√£ h·ªôi, timeline l·ªãch s·ª≠, c√°c kh√°i ni·ªám c·ªët l√µi ƒë∆∞·ª£c gi·∫£i th√≠ch d·ªÖ hi·ªÉu v√† mind maps t·ªïng h·ª£p',
      modifications: 'ƒêi·ªÅu ch·ªânh ng√¥n ng·ªØ h·ªçc thu·∫≠t cho d·ªÖ ti·∫øp c·∫≠n, b·ªï sung v√≠ d·ª• th·ª±c t·∫ø Vi·ªát Nam, t·ªëi ∆∞u c·∫•u tr√∫c th√¥ng tin cho web interface'
    },
    {
      name: 'Gemini Nano Banana',
      purpose: 'T·∫°o h√¨nh ·∫£nh minh h·ªça',
      prompt: 'Create vintage-style illustrations for Marx-Lenin economic theory timeline',
      output: 'C√°c h√¨nh ·∫£nh timeline v√† bi·ªÉu t∆∞·ª£ng theo style c·ªï ƒëi·ªÉn',
      modifications: 'Ch·ªânh s·ª≠a m√†u s·∫Øc, k√≠ch th∆∞·ªõc v√† t·ªëi ∆∞u h√≥a cho web'
    }
  ];

  const verificationSources = [
    {
      category: 'T√†i li·ªáu h·ªçc thu·∫≠t ch√≠nh th·ª©c',
      sources: [
        'Gi√°o tr√¨nh Tri·∫øt h·ªçc M√°c-L√™nin, d√πng cho sinh vi√™n ƒë·∫°i h·ªçc h·ªá kh√¥ng chuy√™n l√Ω lu·∫≠n ch√≠nh tr·ªã - B·∫£n d·ª± th·∫£o',
        'Slides Student Material MLN111'
        ]
    },
    {
      category: 'Ngu·ªìn tham kh·∫£o b·ªï sung',
      sources: [
        'Videos gi·∫£ng d·∫°y tr√™n YouTube',
      ]
    },
    {
      category: 'Quy tr√¨nh ki·ªÉm ch·ª©ng',
      sources: [
        'ƒê·ªëi chi·∫øu th√¥ng tin AI v·ªõi gi√°o tr√¨nh v√† slides ch√≠nh th·ª©c',
        'So s√°nh v√† x√°c minh t·ª´ nhi·ªÅu ngu·ªìn t√†i li·ªáu',
      ]
    }
  ];

  const creativeApplications = [
    {
      title: 'Storytelling t∆∞∆°ng t√°c',
      description: 'S·ª≠ d·ª•ng AI ƒë·ªÉ t·∫°o ra c√¢u chuy·ªán k·ªÉ l·ªãch s·ª≠ d∆∞·ªõi d·∫°ng timeline t∆∞∆°ng t√°c v·ªõi animations, gi√∫p ng∆∞·ªùi h·ªçc ti·∫øp c·∫≠n c√°c kh√°i ni·ªám ph·ª©c t·∫°p th√¥ng qua narrative engaging v√† tr·ª±c quan'
    },
    {
      title: 'H·ªá th·ªëng Quiz th√¥ng minh',
      description: 'AI c·∫£i thi·ªán s·ª± ƒëa d·∫°ng c·ªßa c√¢u h·ªèi v·ªõi nhi·ªÅu d·∫°ng b√†i t·∫≠p s√°ng t·∫°o, t·ªëi ∆∞u h·ªá th·ªëng ch·∫•m ƒëi·ªÉm t·ª± ƒë·ªông, v√† h·ªó tr·ª£ ki·∫øn tr√∫c client-server hi·ªán ƒë·∫°i v·ªõi real-time synchronization v√† multiplayer capabilities'
    },
    {
      title: 'Thi·∫øt k·∫ø UI/UX s√°ng t·∫°o',
      description: 'AI h·ªó tr·ª£ t·∫°o giao di·ªán ph√π h·ª£p v·ªõi n·ªôi dung h·ªçc thu·∫≠t, t·ªëi ∆∞u hi·ªáu nƒÉng loading v√† rendering, ƒë·ªìng th·ªùi ƒë·∫£m b·∫£o accessibility v√† responsive design cho tr·∫£i nghi·ªám h·ªçc t·∫≠p t·ªëi ∆∞u tr√™n m·ªçi thi·∫øt b·ªã'
    },
    {
      title: 'H·ªó tr·ª£ t·∫°o H√¨nh ·∫£nh v√† Mindmaps',
      description: 'AI sinh t·∫°o illustrations ph√π h·ª£p v·ªõi theme vintage/c·ªï ƒëi·ªÉn, t·∫°o mindmaps t·ªïng h·ª£p c√°c kh√°i ni·ªám kinh t·∫ø Marx-Lenin, v√† h·ªó tr·ª£ visual storytelling ƒë·ªÉ complex theories tr·ªü n√™n d·ªÖ hi·ªÉu v√† memorable'
    }
  ];

  return (
    <div 
      className="min-h-screen bg-[#231812] text-stone-100"
      style={{ 
        backgroundImage: vintagePaperTexture, 
        backgroundBlendMode: "multiply",
        backgroundColor: "#180b03f5" 
      }}
    >
      <div className="pointer-events-none absolute inset-0 bg-[#e5caa2]/12 mix-blend-soft-light"></div>
      
      <div className="relative z-10 container mx-auto px-6 py-12">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: -50 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-12"
        >
          <motion.button
            onClick={() => navigate('/')}
            className="mb-6 rounded-[16px] bg-[#2b2018]/95 border border-amber-900/45 px-4 py-2 text-sm text-amber-200 hover:text-amber-100 transition-colors backdrop-blur-md"
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            ‚Üê Quay l·∫°i trang ch·ªß
          </motion.button>
          
          <h1 className="text-4xl md:text-6xl font-bold text-amber-100 mb-4" style={{ textShadow: '0 0 20px rgba(233, 199, 90, 0.5)' }}>
            B√°o c√°o S·ª≠ d·ª•ng AI
          </h1>
          <h2 className="text-xl md:text-2xl text-amber-300 tracking-wide">
            Cam k·∫øt Li√™m ch√≠nh H·ªçc thu·∫≠t
          </h2>
        </motion.div>

        {/* Navigation */}
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2 }}
          className="flex flex-wrap justify-center gap-4 mb-12"
        >
          {sections.map((section) => (
            <motion.button
              key={section.id}
              onClick={() => setActiveSection(section.id)}
              className={`rounded-[16px] px-6 py-3 font-semibold transition-all border backdrop-blur-md ${
                activeSection === section.id
                  ? 'bg-amber-600/90 text-stone-100 border-amber-500/50 shadow-lg'
                  : 'bg-[#2b2018]/95 text-amber-200 border-amber-900/45 hover:bg-amber-600/30'
              }`}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <span className="mr-2">{section.icon}</span>
              {section.title}
            </motion.button>
          ))}
        </motion.div>

        {/* Content */}
        <motion.div
          key={activeSection}
          initial={{ opacity: 0, x: 50 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.5 }}
          className="max-w-6xl mx-auto"
        >
          {activeSection === 'tools' && (
            <div className="space-y-8">
              <h3 className="text-3xl font-bold text-amber-100 mb-6 text-center">
                ü§ñ C√¥ng c·ª• AI ƒë√£ s·ª≠ d·ª•ng
              </h3>
              
              {aiTools.map((tool, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 30 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: index * 0.1 }}
                  className="rounded-[28px] bg-[#2b2018]/95 border border-amber-900/45 p-8 shadow-lg backdrop-blur-md"
                >
                  <div className="pointer-events-none absolute inset-0 bg-[#e5caa2]/8 mix-blend-soft-light rounded-[28px]"></div>
                  
                  <div className="relative z-10">
                    <h4 className="text-2xl font-bold text-amber-100 mb-4">{tool.name}</h4>
                    <p className="text-amber-200 mb-4"><strong>M·ª•c ƒë√≠ch:</strong> {tool.purpose}</p>
                    
                    <div className="grid md:grid-cols-3 gap-6">
                      <div className="bg-[#1a0f08]/60 rounded-[16px] p-4 border border-amber-800/30">
                        <h5 className="font-semibold text-amber-300 mb-2">Prompt ch√≠nh:</h5>
                        <p className="text-sm text-amber-100/80">{tool.prompt}</p>
                      </div>
                      
                      <div className="bg-[#1a0f08]/60 rounded-[16px] p-4 border border-amber-800/30">
                        <h5 className="font-semibold text-amber-300 mb-2">Output t·ª´ AI:</h5>
                        <p className="text-sm text-amber-100/80">{tool.output}</p>
                      </div>
                      
                      <div className="bg-[#1a0f08]/60 rounded-[16px] p-4 border border-amber-800/30">
                        <h5 className="font-semibold text-amber-300 mb-2">Ch·ªânh s·ª≠a c·ªßa nh√≥m:</h5>
                        <p className="text-sm text-amber-100/80">{tool.modifications}</p>
                      </div>
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          )}

          {activeSection === 'verification' && (
            <div className="space-y-8">
              <h3 className="text-3xl font-bold text-amber-100 mb-6 text-center">
                üîç Ki·ªÉm ch·ª©ng v√† ƒê·ªëi chi·∫øu Ngu·ªìn
              </h3>
              
              {verificationSources.map((category, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 30 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: index * 0.1 }}
                  className="rounded-[28px] bg-[#2b2018]/95 border border-amber-900/45 p-8 shadow-lg backdrop-blur-md"
                >
                  <div className="pointer-events-none absolute inset-0 bg-[#e5caa2]/8 mix-blend-soft-light rounded-[28px]"></div>
                  
                  <div className="relative z-10">
                    <h4 className="text-2xl font-bold text-amber-100 mb-6">{category.category}</h4>
                    <div className="grid gap-4">
                      {category.sources.map((source, idx) => (
                        <div key={idx} className="flex items-start space-x-3">
                          <span className="text-amber-400 mt-1">‚úì</span>
                          <p className="text-amber-100/90">{source}</p>
                        </div>
                      ))}
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          )}

          {activeSection === 'creativity' && (
            <div className="space-y-8">
              <h3 className="text-3xl font-bold text-amber-100 mb-6 text-center">
                ‚ú® ·ª®ng d·ª•ng AI S√°ng t·∫°o
              </h3>
              
              <div className="grid md:grid-cols-2 gap-8">
                {creativeApplications.map((app, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, scale: 0.9 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ delay: index * 0.1 }}
                    className="rounded-[28px] bg-[#2b2018]/95 border border-amber-900/45 p-8 shadow-lg backdrop-blur-md"
                  >
                    <div className="pointer-events-none absolute inset-0 bg-[#e5caa2]/8 mix-blend-soft-light rounded-[28px]"></div>
                    
                    <div className="relative z-10">
                      <h4 className="text-xl font-bold text-amber-100 mb-4">{app.title}</h4>
                      <p className="text-amber-100/80 leading-relaxed">{app.description}</p>
                    </div>
                  </motion.div>
                ))}
              </div>
            </div>
          )}

          {activeSection === 'commitment' && (
            <div className="space-y-8">
              <h3 className="text-3xl font-bold text-amber-100 mb-6 text-center">
                üìú CAM K·∫æT LI√äM CH√çNH H·ªåC THU·∫¨T
              </h3>
              
              <motion.div
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                className="rounded-[28px] bg-[#2b2018]/95 border border-amber-900/45 p-12 shadow-lg backdrop-blur-md text-center"
              >
                <div className="pointer-events-none absolute inset-0 bg-[#e5caa2]/8 mix-blend-soft-light rounded-[28px]"></div>
                
                <div className="relative z-10 space-y-8">
                  <div className="text-6xl mb-6">ü§ù</div>
                  
                  <div className="space-y-6 text-left max-w-4xl mx-auto">
                    <div className="border-l-4 border-amber-500 pl-6">
                      <p className="text-lg text-amber-100 leading-relaxed">
                        <strong className="text-amber-300">Ch√∫ng t√¥i cam k·∫øt:</strong> S·ª≠ d·ª•ng AI nh∆∞ m·ªôt c√¥ng c·ª• h·ªó tr·ª£, kh√¥ng thay th·∫ø ho√†n to√†n qu√° tr√¨nh t∆∞ duy v√† s√°ng t·∫°o c·ªßa con ng∆∞·ªùi.
                      </p>
                    </div>
                    
                    <div className="border-l-4 border-amber-500 pl-6">
                      <p className="text-lg text-amber-100 leading-relaxed">
                        <strong className="text-amber-300">Ch√∫ng t√¥i ƒë·∫£m b·∫£o:</strong> M·ªçi n·ªôi dung ƒë∆∞·ª£c t·∫°o ra ƒë·ªÅu tr·∫£i qua qu√° tr√¨nh ki·ªÉm ch·ª©ng, ch·ªânh s·ª≠a v√† b·ªï sung b·ªüi th√†nh vi√™n nh√≥m.
                      </p>
                    </div>
                    
                    <div className="border-l-4 border-amber-500 pl-6">
                      <p className="text-lg text-amber-100 leading-relaxed">
                        <strong className="text-amber-300">Ch√∫ng t√¥i tu√¢n th·ªß:</strong> C√°c nguy√™n t·∫Øc ƒë·∫°o ƒë·ª©c trong nghi√™n c·ª©u h·ªçc thu·∫≠t v√† minh b·∫°ch trong vi·ªác s·ª≠ d·ª•ng c√¥ng ngh·ªá AI.
                      </p>
                    </div>
                  </div>
                  
                  <div className="mt-12 pt-8 border-t border-amber-800/30">
                    <p className="text-amber-200 text-sm">
                      B√°o c√°o n√†y ƒë∆∞·ª£c l·∫≠p nh·∫±m ƒë·∫£m b·∫£o t√≠nh minh b·∫°ch v√† tr√°ch nhi·ªám trong vi·ªác s·ª≠ d·ª•ng c√¥ng ngh·ªá AI
                      <br />trong qu√° tr√¨nh h·ªçc t·∫≠p v√† nghi√™n c·ª©u h·ªçc thu·∫≠t.
                    </p>
                    
                    <div className="mt-6 text-amber-300 font-semibold">
                      <div className="flex items-center justify-center space-x-2">
                        <span>üìÖ</span>
                        <span>Ng√†y l·∫≠p: {new Date().toLocaleDateString('vi-VN')}</span>
                      </div>
                    </div>
                  </div>
                </div>
              </motion.div>
            </div>
          )}
        </motion.div>
      </div>
    </div>
  );
};

export default AIReportPage;