import { motion } from 'framer-motion';

const RealWorldExamples = () => {
  const examples = [
    {
      title: "To√†n c·∫ßu h√≥a",
      description: "S·ª± k·∫øt n·ªëi kinh t·∫ø, ch√≠nh tr·ªã, vƒÉn h√≥a to√†n c·∫ßu t·∫°o ra nh·ªØng thay ƒë·ªïi s√¢u s·∫Øc trong quan h·ªá s·∫£n xu·∫•t v√† c·∫•u tr√∫c x√£ h·ªôi.",
      icon: "üåç",
      color: "from-blue-500 to-cyan-500",
      points: [
        "Chu·ªói cung ·ª©ng to√†n c·∫ßu",
        "Di c∆∞ lao ƒë·ªông qu·ªëc t·∫ø", 
        "Trao ƒë·ªïi vƒÉn h√≥a v√† tri th·ª©c",
        "C√°c t·ªï ch·ª©c ƒëa qu·ªëc gia"
      ]
    },
    {
      title: "C√°ch m·∫°ng c√¥ng nghi·ªáp 4.0",
      description: "S·ª± ph√°t tri·ªÉn c·ªßa IoT, AI, robotics ƒëang thay ƒë·ªïi cƒÉn b·∫£n c√°ch th·ª©c s·∫£n xu·∫•t v√† t·ªï ch·ª©c lao ƒë·ªông.",
      icon: "ü§ñ",
      color: "from-purple-500 to-pink-500",
      points: [
        "T·ª± ƒë·ªông h√≥a s·∫£n xu·∫•t",
        "Internet of Things (IoT)",
        "D·ªØ li·ªáu l·ªõn v√† ph√¢n t√≠ch",
        "S·∫£n xu·∫•t th√¥ng minh"
      ]
    },
    {
      title: "Tr√≠ tu·ªá nh√¢n t·∫°o v√† lao ƒë·ªông",
      description: "AI ƒëang t√°i ƒë·ªãnh h√¨nh th·ªã tr∆∞·ªùng lao ƒë·ªông, t·∫°o ra nh·ªØng ng√†nh ngh·ªÅ m·ªõi v√† thay th·∫ø m·ªôt s·ªë c√¥ng vi·ªác truy·ªÅn th·ªëng.",
      icon: "üß†",
      color: "from-emerald-500 to-teal-500",
      points: [
        "Thay th·∫ø lao ƒë·ªông th·ªß c√¥ng",
        "T·∫°o ra ngh·ªÅ nghi·ªáp m·ªõi",
        "N√¢ng cao nƒÉng su·∫•t",
        "ƒê√≤i h·ªèi k·ªπ nƒÉng m·ªõi"
      ]
    },
    {
      title: "Kinh t·∫ø th·ªã tr∆∞·ªùng ƒë·ªãnh h∆∞·ªõng XHCN",
      description: "M√¥ h√¨nh kinh t·∫ø Vi·ªát Nam k·∫øt h·ª£p c∆° ch·∫ø th·ªã tr∆∞·ªùng v·ªõi ƒë·ªãnh h∆∞·ªõng x√£ h·ªôi ch·ªß nghƒ©a.",
      icon: "üáªüá≥",
      color: "from-red-500 to-yellow-500",
      points: [
        "ƒêa d·∫°ng h√≥a s·ªü h·ªØu",
        "Vai tr√≤ c·ªßa nh√† n∆∞·ªõc",
        "Ph√°t tri·ªÉn b·ªÅn v·ªØng",
        "C√¥ng b·∫±ng x√£ h·ªôi"
      ]
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-slate-800 to-gray-900 py-20">
      <div className="container mx-auto px-6">
        <motion.div
          initial={{ opacity: 0, y: -50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-cyan-400 via-blue-500 to-purple-600 bg-clip-text text-transparent">
            Li√™n h·ªá th·ª±c ti·ªÖn v√† √Ω nghƒ©a h·ªçc thuy·∫øt
          </h2>
          <p className="text-xl md:text-2xl text-gray-300 max-w-3xl mx-auto">
            ·ª®ng d·ª•ng h·ªçc thuy·∫øt M√°c - L√™nin trong vi·ªác hi·ªÉu v√† gi·∫£i th√≠ch c√°c hi·ªán t∆∞·ª£ng kinh t·∫ø - x√£ h·ªôi ƒë∆∞∆°ng ƒë·∫°i
          </p>
        </motion.div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-7xl mx-auto">
          {examples.map((example, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: index * 0.2 }}
              whileHover={{ scale: 1.02, y: -10 }}
              className={`bg-gradient-to-br ${example.color} p-1 rounded-2xl shadow-2xl`}
            >
              <div className="bg-gray-900/90 backdrop-blur-md rounded-2xl p-8 h-full">
                <div className="text-center mb-6">
                  <div className="text-6xl mb-4">{example.icon}</div>
                  <h3 className="text-2xl md:text-3xl font-bold text-white mb-4">
                    {example.title}
                  </h3>
                </div>

                <p className="text-gray-300 text-lg leading-relaxed mb-6">
                  {example.description}
                </p>

                <div className="space-y-3">
                  <h4 className="text-yellow-400 font-semibold text-lg mb-3">ƒêi·ªÉm n·ªïi b·∫≠t:</h4>
                  {example.points.map((point, pointIndex) => (
                    <motion.div
                      key={pointIndex}
                      initial={{ opacity: 0, x: -20 }}
                      whileInView={{ opacity: 1, x: 0 }}
                      transition={{ duration: 0.5, delay: (index * 0.2) + (pointIndex * 0.1) }}
                      className="flex items-center space-x-3 text-gray-300"
                    >
                      <div className="w-2 h-2 bg-cyan-400 rounded-full flex-shrink-0"></div>
                      <span>{point}</span>
                    </motion.div>
                  ))}
                </div>

                {/* Decorative elements */}
                <div className="mt-6 pt-6 border-t border-white/10">
                  <div className="flex items-center justify-center space-x-2">
                    {[...Array(3)].map((_, i) => (
                      <motion.div
                        key={i}
                        animate={{ scale: [1, 1.2, 1], opacity: [0.5, 1, 0.5] }}
                        transition={{ duration: 2, delay: i * 0.3, repeat: Infinity }}
                        className="w-2 h-2 bg-white/30 rounded-full"
                      />
                    ))}
                  </div>
                </div>
              </div>
            </motion.div>
          ))}
        </div>

        {/* Connecting diagram */}
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.8 }}
          className="mt-20"
        >
          <div className="bg-white/5 backdrop-blur-md rounded-2xl p-8 md:p-12 border border-white/10 max-w-5xl mx-auto">
            <h3 className="text-3xl md:text-4xl font-bold text-center mb-8 text-white">
              M·ªëi li√™n h·ªá v·ªõi h·ªçc thuy·∫øt M√°c - L√™nin
            </h3>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
              <motion.div
                initial={{ opacity: 0, scale: 0.8 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.8, delay: 1 }}
                className="bg-gradient-to-br from-orange-500/20 to-red-500/20 rounded-xl p-6 border border-orange-400/30"
              >
                <div className="text-4xl mb-4">‚öôÔ∏è</div>
                <h4 className="text-xl font-bold text-orange-400 mb-3">L·ª±c l∆∞·ª£ng s·∫£n xu·∫•t</h4>
                <p className="text-gray-300 text-sm">
                  C√¥ng ngh·ªá AI, IoT, robotics l√† nh·ªØng l·ª±c l∆∞·ª£ng s·∫£n xu·∫•t m·ªõi, 
                  th√∫c ƒë·∫©y s·ª± ph√°t tri·ªÉn m·∫°nh m·∫Ω c·ªßa x√£ h·ªôi
                </p>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, scale: 0.8 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.8, delay: 1.2 }}
                className="bg-gradient-to-br from-blue-500/20 to-purple-500/20 rounded-xl p-6 border border-blue-400/30"
              >
                <div className="text-4xl mb-4">ü§ù</div>
                <h4 className="text-xl font-bold text-blue-400 mb-3">Quan h·ªá s·∫£n xu·∫•t</h4>
                <p className="text-gray-300 text-sm">
                  To√†n c·∫ßu h√≥a v√† m√¥ h√¨nh kinh t·∫ø m·ªõi ƒëang thay ƒë·ªïi 
                  quan h·ªá s·ªü h·ªØu, ph√¢n ph·ªëi v√† trao ƒë·ªïi
                </p>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, scale: 0.8 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.8, delay: 1.4 }}
                className="bg-gradient-to-br from-green-500/20 to-teal-500/20 rounded-xl p-6 border border-green-400/30"
              >
                <div className="text-4xl mb-4">üèõÔ∏è</div>
                <h4 className="text-xl font-bold text-green-400 mb-3">Ki·∫øn tr√∫c th∆∞·ª£ng t·∫ßng</h4>
                <p className="text-gray-300 text-sm">
                  Ch√≠nh s√°ch, lu·∫≠t ph√°p, gi√°o d·ª•c c·∫ßn th√≠ch ·ª©ng 
                  v·ªõi nh·ªØng thay ƒë·ªïi c·ªßa c∆° s·ªü kinh t·∫ø
                </p>
              </motion.div>
            </div>

            {/* Conclusion */}
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 1.6 }}
              className="mt-8 pt-8 border-t border-white/10 text-center"
            >
              <p className="text-lg md:text-xl text-white leading-relaxed">
                H·ªçc thuy·∫øt M√°c - L√™nin kh√¥ng ch·ªâ l√† l√Ω thuy·∫øt qu√° kh·ª©, 
                m√† l√† <span className="text-yellow-400 font-semibold">c√¥ng c·ª• khoa h·ªçc</span> ƒë·ªÉ 
                hi·ªÉu v√† ƒë·ªãnh h∆∞·ªõng <span className="text-cyan-400 font-semibold">s·ª± ph√°t tri·ªÉn x√£ h·ªôi</span> trong th·ªùi ƒë·∫°i m·ªõi.
              </p>
            </motion.div>
          </div>
        </motion.div>
      </div>
    </div>
  );
};

export default RealWorldExamples;